# ================================================================
# App Info
# ================================================================
quarkus.application.name=quarkus-pjc-2025
quarkus.http.port=8080

# ================================================================
# Banco de Dados - PostgreSQL
# ================================================================
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL}
quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME}
quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD}
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.jdbc.timezone=UTC

# ================================================================
# Flyway (se estiver usando)
# ================================================================
quarkus.flyway.migrate-at-start=true

# ================================================================
# Upload Multipart
# ================================================================
quarkus.http.body.uploads.directory=temp
quarkus.http.limits.max-body-size=20M
quarkus.http.body.uploads.max-file-size=10M
quarkus.http.body.uploads.enabled=true

# ================================================================
# CORS
# ================================================================
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:4200
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# ================================================================
# JWT
# ================================================================
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
mp.jwt.verify.issuer=quarkus-pjc-2025
mp.jwt.token.header=Authorization
mp.jwt.token.cookie=false
pjc.jwt.secret=minha-chave-super-secreta-com-32-char!!
pjc.jwt.expiration=600000
pjc.jwt.refresh-expiration=604800000

# Obs: os valores customizados (pjc.jwt.*) são para você usar na geração dos tokens em sua lógica.
# O mp.jwt.* é para a verificação dos tokens, conforme especificação do MicroProfile JWT

# ================================================================
# MinIO (custom config - para ser injetada via @ConfigProperty)
# ================================================================
minio.bucket-name=quarkus_fotos
minio.url=${MINIO_URL}
minio.access-key=${MINIO_ACCESS_KEY}
minio.secret-key=${MINIO_SECRET_KEY}

